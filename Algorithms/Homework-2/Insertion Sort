//Vremenska slozenost algoritma je O(n*n)
//Algoritam radi sa bidirekcionim iteratorima
//In place
//Stabilan


#include<iostream>
#include<vector>

template<typename It, typename C>
void insertionsort(It begin, It end, C comp){
  for (It left= begin+1; left != end; ++left){
    for(It right=left; right!= begin && comp(*right, *(right-1)); --right){
      std::swap(*right, *(right-1));
    }
  }
}

int main() {
    std::vector<int> numbers = {4, 2, 7, 5, 1, 3, 6};
    
    std::cout << "Before sorting: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    insertionsort(numbers.begin(), numbers.end(), std::less<int>());
    
    std::cout << "After sorting in ascending order: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    insertionsort(numbers.begin(), numbers.end(), std::greater<int>());
    
    std::cout << "After sorting in descending order: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    return 0;
}

// Vremenska slozenost bubble sort algoritma - O(n*n)
// Bubble sort radi sa bidirekcionim tipom iteratora
// In place
// Stabilan
#include<iostream>
#include<vector>


template<typename It, typename C>
void bubblesort(It begin, It end, C comp){

  for(It last=end; last!=begin; --last){
    for(It it=begin; it!=last-1; ++it){
      if (!comp(*it, *(it+1)))
        std::swap(*it, *(it+1));
  }


}
}

int main() {
    std::vector<int> numbers = {4, 2, 7, 5, 1, 3, 6};
    
    std::cout << "Before sorting: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    bubblesort(numbers.begin(), numbers.end(), std::less<int>());
    
    std::cout << "After sorting in ascending order: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    bubblesort(numbers.begin(), numbers.end(), std::greater<int>());
    
    std::cout << "After sorting in descending order: ";
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    return 0;
}
